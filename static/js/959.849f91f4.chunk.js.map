{"version":3,"file":"static/js/959.849f91f4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","servises/APIFetch.js","webpack://react-homework-template/./src/components/styles/page_styles.module.css?5c33"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieInfoContainner\":\"MovieInfo_movieInfoContainner__8HDKh\",\"movieInfoText\":\"MovieInfo_movieInfoText__TnfAD\",\"genresList\":\"MovieInfo_genresList__XamDA\",\"genreItem\":\"MovieInfo_genreItem__3iPen\"};","import stockPhoto from '../default/images/logo_imt_small2_medium.jpg';\nimport css from './MovieInfo.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieInfo = ({ movie }) => {\n  const { poster_path, title, overview, release_date, genres } = movie;\n  const year = release_date.slice(0, 4);\n\n  return (\n    <div className={css.movieInfoContainner}>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : stockPhoto\n        }\n        alt=\"poster\"\n        style={{ width: 264, height: 426 }}\n      />\n      <div className={css.movieInfoText}>\n        <h1>\n          {title}({year})\n        </h1>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <ul className={css.genresList}>\n          {genres.map(({ id, name }) => {\n            return (\n              <li key={id} className={css.genreItem}>\n                {name}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n  }),\n};\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport { getMovieById } from '../servises/APIFetch';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport styles from '../components/styles/page_styles.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(res => setMovieData(res))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <main>\n      <section className={styles.section}>\n        <div className={styles.containeer}>\n          <Link to={backLinkLocationRef.current}>\n            <button className={styles.buttonBack} type=\"button\">\n              Go back\n            </button>\n          </Link>\n\n          {movieData && <MovieInfo movie={movieData} />}\n\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst instanse = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd063a3c1ffdc1b15e46a20f479fc1290',\n  },\n});\n\nexport const IMAGEBASEURL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getPopularMovies() {\n  const { data } = await instanse.get(`trending/movie/day`);\n  return data;\n}\n\nexport async function getMovieById(movieId) {\n  const { data } = await instanse.get(`movie/${movieId}`);\n  return data;\n}\n\nexport async function getMovieCast(movieId) {\n  const { data } = await instanse.get(`movie/${movieId}/credits`);\n  return data;\n}\n\nexport async function getMovieReviews(movieId) {\n  const { data } = await instanse.get(`movie/${movieId}/reviews`);\n  return data;\n}\n\nexport async function searchMovie(name) {\n  const params = {\n    query: name,\n    include_adults: false,\n    language: 'es-US',\n    page: 1,\n  };\n  const { data } = await instanse.get(`search/movie`, { params });\n  return data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"page_styles_section__yCKPn\",\"containeer\":\"page_styles_containeer__WMJX4\",\"buttonBack\":\"page_styles_buttonBack__mWl5k\"};"],"names":["MovieInfo","_ref","movie","poster_path","title","overview","release_date","genres","year","slice","_jsxs","className","css","children","_jsx","src","concat","stockPhoto","alt","style","width","height","map","_ref2","id","name","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieData","setMovieData","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMovieById","then","res","catch","error","console","log","styles","Link","to","current","type","Suspense","fallback","Outlet","instanse","axios","baseURL","params","api_key","IMAGEBASEURL","getPopularMovies","_getPopularMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instanse$get","data","_context","prev","next","get","sent","abrupt","stop","_x","_getMovieById","_callee2","_yield$instanse$get2","_context2","getMovieCast","_x2","_getMovieCast","_callee3","_yield$instanse$get3","_context3","getMovieReviews","_x3","_getMovieReviews","_callee4","_yield$instanse$get4","_context4","searchMovie","_x4","_searchMovie","_callee5","_yield$instanse$get5","_context5","query","include_adults","language","page"],"sourceRoot":""}